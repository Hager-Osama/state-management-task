{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hager\\\\Desktop\\\\New folder\\\\my-app\\\\src\\\\component\\\\text field\\\\textFeild.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextFeild = () => {\n  _s();\n  const [inputData, setInputData] = useState(''); // Input field data\n  const [orderList, setOrderList] = useState([]); // List of items\n  const handleInputChange = event => {\n    setInputData(event.target.value);\n  }; //Implement an onChange handler for the input field to capture the user's input\n  const addOrderItem = () => {\n    if (inputData !== '') {\n      setOrderList([...orderList, {\n        item: inputData\n      }]);\n      setInputData(''); // Clear input field after adding\n    }\n  }; //Create a function to add the input data to the order list\n  const handleDeleteItem = index => {\n    const updatedOrderList = [...orderList];\n    updatedOrderList.splice(index, 1);\n    setOrderList(updatedOrderList);\n  }; //Implement a function to remove an item from the order list based on its index\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputData,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addOrderItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orderList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.item, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteItem(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TextFeild, \"ZlFzgwgKAo1r2IQkN5iljPi1RRo=\");\n_c = TextFeild;\nexport default TextFeild;\nvar _c;\n$RefreshReg$(_c, \"TextFeild\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","TextFeild","_s","inputData","setInputData","useState","orderList","setOrderList","handleInputChange","event","target","value","addOrderItem","item","handleDeleteItem","index","updatedOrderList","splice","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Hager/Desktop/New folder/my-app/src/component/text field/textFeild.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst TextFeild = () => {\r\n    const [inputData, setInputData] = useState(''); // Input field data\r\n    const [orderList, setOrderList] = useState([]); // List of items\r\n    const handleInputChange = (event) => {\r\n        setInputData(event.target.value);\r\n    }; //Implement an onChange handler for the input field to capture the user's input\r\n    const addOrderItem = () => {\r\n        if (inputData !== '') {\r\n            setOrderList([...orderList, { item: inputData }]);\r\n            setInputData(''); // Clear input field after adding\r\n        }\r\n    };  //Create a function to add the input data to the order list\r\n    const handleDeleteItem = (index) => {\r\n        const updatedOrderList = [...orderList];\r\n        updatedOrderList.splice(index, 1);\r\n        setOrderList(updatedOrderList);\r\n    }; //Implement a function to remove an item from the order list based on its index\r\n\r\n  return (\r\n    <>\r\n      <div className='container text-center'>\r\n            <input type=\"text\" value={inputData} onChange={handleInputChange} />\r\n            <button onClick={addOrderItem}>Add Item</button>\r\n            <ul>\r\n                {orderList.map((item, index) => (\r\n                    <li key={index}>\r\n                        {item.item}\r\n                        <button onClick={() => handleDeleteItem(index)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextFeild\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IACjCL,YAAY,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC,CAAC,CAAC;EACH,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIT,SAAS,KAAK,EAAE,EAAE;MAClBI,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;QAAEO,IAAI,EAAEV;MAAU,CAAC,CAAC,CAAC;MACjDC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC,CAAC,CAAE;EACJ,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,gBAAgB,GAAG,CAAC,GAAGV,SAAS,CAAC;IACvCU,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjCR,YAAY,CAACS,gBAAgB,CAAC;EAClC,CAAC,CAAC,CAAC;;EAEL,oBACElB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKqB,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBAChCpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACT,KAAK,EAAER,SAAU;QAACkB,QAAQ,EAAEb;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpE3B,OAAA;QAAQ4B,OAAO,EAAEd,YAAa;QAAAM,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChD3B,OAAA;QAAAoB,QAAA,EACKZ,SAAS,CAACqB,GAAG,CAAC,CAACd,IAAI,EAAEE,KAAK,kBACvBjB,OAAA;UAAAoB,QAAA,GACKL,IAAI,CAACA,IAAI,eACVf,OAAA;YAAQ4B,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACC,KAAK,CAAE;YAAAG,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF1DV,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACR,CAAC;AAEP,CAAC;AAAAvB,EAAA,CAlCKD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAoCf,eAAeA,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}